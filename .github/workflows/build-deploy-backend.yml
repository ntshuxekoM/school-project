# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy

env:
  AWS_USER: ubuntu
  EC2_INSTANCE: ec2-13-244-123-141.af-south-1.compute.amazonaws.com
  APPLICATION_PATH: /home/ubuntu/application
  
on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./phishing-detector

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Maven clean package
      run: mvn clean package
    
    - name: Docker build and Tag
      run: docker build -t ntshuxeko/phishing-detector:latest .
    
    - name: Docker login
      run: docker login -u ntshuxeko -p ${{ secrets.DOCKER_TOKEN }}

    - name: Docker push
      run: docker push ntshuxeko/phishing-detector:latest
      
    - name: Copy docker-compose file to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.EC2_INSTANCE }}
        username: ${{ env.AWS_USER }}
        port: 22
        key: ${{ secrets.AWS_PRIVAT_KEY }}
        source: "docker-compose.yaml"
        target: ${{ env.APPLICATION_PATH }}
        
    - name: SSH to server
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.AWS_PRIVAT_KEY }}
        REMOTE_HOST: ${{ env.EC2_INSTANCE }}
        REMOTE_USER: ${{ env.AWS_USER }}
        TARGET: ${{ env.APPLICATION_PATH }}
    

